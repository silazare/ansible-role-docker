---
- name: Become block
  block:
    - name: Install {{ docker_packages }}
      package:
        name: '{{ docker_packages }}'
        state: present
      register: installed_docker
      retries: 30
      until: installed_docker is succeeded
      notify: restart docker

    - name: Add user to group 'docker'
      user:
        name: '{{ item }}'
        append: true
        groups: docker
      loop: '{{ l_docker_users }}'
      vars:
        l_docker_users: "{{ docker_users | difference(['root']) }}"

    - name: Create /etc/docker folder
      file:
        path: /etc/docker
        state: directory
        mode: 0755

    - name: Create daemon.json file
      template:
        src: daemon.json.j2
        dest: /etc/docker/daemon.json
      notify: restart docker

    - name: Create docker-compose symlink
      file:
        src: /usr/libexec/docker/cli-plugins/docker-compose
        dest: /usr/bin/docker-compose
        owner: root
        group: root
        state: link

    - name: Create docker config folders
      file:
        path: "{{ item.home }}/.docker"
        state: directory
        mode: 0755
        owner: "{{ item.owner }}"
        group: "{{ item.owner }}"
      loop:
        - { home: "/root", owner: "root" }
        - { home: "/home/vagrant", owner: "vagrant" }

    - name: Install amazon-ecr-credential-helper
      package:
        name: amazon-ecr-credential-helper
        state: present
      register: amazon_ecr_credential_helper
      retries: 30
      until: amazon_ecr_credential_helper is succeeded
      when: aws_private_ecr_registry_name is defined

    - name: Send docker config login
      template:
        src: config.json.j2
        dest: "{{ item.home }}/.docker/config.json"
        mode: 0755
        owner: "{{ item.owner }}"
        group: "{{ item.owner }}"
      loop:
        - { home: "/root", owner: "root" }
        - { home: "/home/vagrant", owner: "vagrant" }
      when: aws_private_ecr_registry_name is defined
  become: true

- name: force all notified handlers to run
  meta: flush_handlers
